/* импортируем основной объект Vue и плагин Vuex, который
  затем добавляется во Vue через вызов. Это позволяет каждому
  компоненту получить доступ к хранилищу для взаимодействия с данными.
  Само хранилище инициализируется некоторым состоянием, в котором
  хранится список дел и элементов, которые будут использоваться при
  создании нового элемента*/
import Vue from 'vue';
import Vuex from 'vuex';

Vue.use(Vuex);

/*Здесь у нас есть вызываемая мутация, addItemкоторая представляет
 * собой простую функцию, которая принимает текущее состояние и элемент
 * в качестве аргумента. Затем мы нажимаем на него , используя для
 * добавления к элементу значения идентификатора, и увеличиваем его так,
 * чтобы в следующий раз, когда мы добавляем элемент, он получил новое
 * значение идентификатора.*/

export default new Vuex.Store({
  state: {
    items: {
      todo: [],
      inProgress: [],
      done: []
    },
    nextId: 1
  },
  mutations: {
    addItem(state, item) {
      state.items.todo.push(Object.assign(item, { id: state.nextId }));
      state.nextId += 1;
    },
    updateItems(state, { items, id }) {
      state.items[id] = items;
    }
  }
});
